@page "/"
@using ValhallaVaultCyberGroup.App.Managers
@using ValhallaVaultCyberGroup.Data.Models.Domain
@using ValhallaVaultCyberGroup.Data.Models.Result
@using ValhallaVaultCyberGroup.Ui.Components.Reusable_Components
@using static ValhallaVaultCyberGroup.Data.Models.Result.ResultCategoryModel
@inject QuestionManager questionManager
@rendermode InteractiveServer



<AuthorizeView>

<NotAuthorized>

    <h2>HÄR SKA ISABELLES KOMPONENT LIGGA </h2>






</NotAuthorized>






    <Authorized Context="authContext">


        <!--Här visas kategorie, segment, subkategori i drow down meny -->

@if(isTestOpen ==false)
{

<div class="d-flex flex-column" style = "width:70vw;">
@if (Categories != null)
{
    @foreach(var category in Categories)
    {
          <Category>
        <Title>
            <h2>@category.Name</h2>
        </Title>

           <Body>
              
                @foreach(var segment in category.Segments)
                {
                    <Category>
                        <Title>
                            <h1>@segment.Name</h1>
                        </Title>

                        <Body>
                           
                                @foreach(var subCategory in segment.SubCategories)
                                {
                                <Category>
                                    
                                    <Title>
                                                <div style="display: flex; justify-content: space-between; align-items: center;">
                                                    <h1 style="margin: 0;">@subCategory.Name</h1>
                                                    <button style="margin-left: 10px;" @onclick="()=>StartTest(subCategory)">Start test</button>
                                                </div>
                                       
                                    </Title>
                                    
                                </Category>
                                }
                            </Body>

                    </Category>
                }
               
           </Body>
        </Category>
    }
  
    
    
}
</div>

}
<!--Om man trycker på starta test så hamnar man här och ser provet-->

@if (isTestOpen == true)
{
   <QuestionForm>

       <Header>
           <h2>@selectedSubCategory.Name</h2>
       </Header>

       <Body>
                    <EditForm Model="@ResultsSubCateogry" Context="formContext" FormName="QuizForm">

                        @foreach(var question in selectedSubCategory.Questions)
            {
                <Question>
                    <Text>
                        <p class="font-weight-bold">@question.Text</p>
                    </Text>
                </Question>

           <InputRadioGroup @bind-Value="ResultsSubCateogry.ResultQuestions">

                @foreach(var response in question.Responses)
                {

                    <label>@response.Text</label>

                    <InputRadio Value="@response.IsRightAnswer"></InputRadio>
                    <br />

                }
          </InputRadioGroup>

            }

        </EditForm>
       </Body>

   </QuestionForm>
}


</Authorized>
</AuthorizeView>




 
@code
{

    private QuestionModel newQuestion = new();
    private ResponseModel selectedResponse = new();
    private List<ResponseModel> responses = new(); 
    private ResultSubCategoryModel ResultsSubCateogry= new();
    private SubCategoryModel selectedSubCategory = new();
    private bool isTestOpen = false; 
    private List<CategoryModel> Categories = new();


    protected override async Task OnInitializedAsync()
    {
        Categories = await questionManager.GetAllCategoriesAsync();


    }


    private void StartTest(SubCategoryModel subCategory)
    {
        isTestOpen = true;
        selectedSubCategory = subCategory;
    }
}
